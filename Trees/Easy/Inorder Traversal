https://leetcode.com/problems/binary-tree-inorder-traversal/description/


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    vector<int> inorderTraversal(TreeNode* root) {
        
        stack<TreeNode*> s1;
        vector<int> ans;
        if(root==NULL)
            return {};
        
        TreeNode* t = root;

        while(t!=NULL || s1.empty()==false)
        {
            while(t)
            {      
                s1.push(t);
                t=t->left;
            }

            t=s1.top();
            ans.push_back(t->val);
            s1.pop();

            
            t=t->right;
        }

        return ans;

    }
};
