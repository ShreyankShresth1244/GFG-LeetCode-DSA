https://leetcode.com/problems/binary-tree-preorder-traversal/description/



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        
        stack<TreeNode*> s;

        if(root==NULL)
            return {};

        vector<int> ans;

        TreeNode* t = root;

        while(t!=NULL || s.empty()==false)
        {
            while(t)
            {
                ans.push_back(t->val);

                if(t->right)
                    s.push(t->right);
                
                t=t->left;
            }

            if(s.empty()==false)
                {
                    t=s.top();
                    s.pop();
                }
        }

        return ans;

    }
};
