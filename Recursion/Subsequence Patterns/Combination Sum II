https://leetcode.com/problems/combination-sum-ii/


class Solution {
public:


    void getComb(vector<vector<int>> & ans,vector<int> &  ds,vector<int> candidates,int target,int ind,int n)
    {   
        
            if(target==0)
            {
                ans.push_back(ds);
                return;
            }

    

    for(int i=ind;i<n;i++)
    {
        if(i>ind && candidates[i]==candidates[i-1])
            continue;
    
        if(candidates[i]>target)
            break;
        
        ds.push_back(candidates[i]);

        getComb(ans,ds,candidates,target-candidates[i],i+1,n);

        ds.pop_back();

    }

}

    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> ds;
        sort(candidates.begin(), candidates.end());
        getComb(ans,ds,candidates,target,0,candidates.size());

        return ans;
    }
};
