https://practice.geeksforgeeks.org/problems/longest-sub-array-with-sum-k0809/1


//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution{
    public:
    int lenOfLongSubarr(int A[],  int N, int K) 
    {
        map <int,int> ans;
        int sum=0;
        int len=0;
        
        for(int i=0;i<N;i++)
        {
            sum+=A[i];
            if(sum==K)
            {
                len=i+1;
                
            }
            
            int rem=sum-K;
            
         
            
            
            if(ans.find(rem)!=ans.end())
            {
                int curr=i-ans[rem];
                if(curr>len)
                {
                    len=curr;
                }
            }
            
            if(ans.find(sum)==ans.end())
            
            {
                ans[sum]=i;
            }
            
            
        }
        return len;
       
       
    } 

};

//{ Driver Code Starts.

int main() {
	//code
	
	int t;cin>>t;
	while(t--)
	{
	    int n, k;
	    cin>> n >> k;
	    int a[n];
	    
	    for(int i=0;i<n;i++)
	        cin>>a[i];
	   Solution ob;
	   cout << ob.lenOfLongSubarr(a, n , k)<< endl;
	    
	}
	
	return 0;
}
// } Driver Code Ends
