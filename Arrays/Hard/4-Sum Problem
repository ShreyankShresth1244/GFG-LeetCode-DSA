https://leetcode.com/problems/4sum/


class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        
        sort(nums.begin(),nums.end());

        int n= nums.size();

        vector<vector<int>> ans;


        for(int i=0;i<n;i++)
        {   
                if(i>0 && nums[i-1]==nums[i])
                    continue;

            for(int j=i+1;j<n;j++)
            {   
                if(j>i+1 && nums[j-1]==nums[j] )                     
                    
                    continue;

                long sum=((long)target-((long)nums[i]+(long)nums[j]));
                int k=j+1;
                int l=n-1;
                while(k<l)
                {   
                    if(sum==nums[k]+nums[l])
                    {   
                        int check1=nums[k];
                        int check2=nums[l];
                        vector<int> check = {nums[i],nums[j],nums[k],nums[l]};

                        ans.push_back(check);


                        k++;
                        l--;

                        while(k<l && nums[k]==check1)
                        {
                            k++;
                        }
                        while(k<l && nums[l]==check2)
                        {
                            l--;
                        }
                        
                    }
                    else if(sum<nums[k]+nums[l])
                        l--;
                    else
                        k++;
                }
            }

        }

        return ans;
    }
};

