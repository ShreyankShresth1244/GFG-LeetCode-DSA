https://www.codingninjas.com/studio/problems/minimal-cost_8180930


MEMOIZATION

#include<bits/stdc++.h>
using namespace std;

int count(int ind, int k, vector<int> &height,vector<int> &dp)
{
    if(ind==0)
        return 0;

    if(dp[ind]!=-1)
        return dp[ind];

    int mini=INT_MAX;
    int ans;

    for(int i=1;i<=k;i++)
    {   
        if(ind-i>=0)
            ans=count(ind-i,k,height,dp)+abs(height[ind]-height[ind-i]);
        mini=min(mini,ans);
    }

    return dp[ind]=mini;
    
}


int minimizeCost(int n, int k, vector<int> &height){
    vector<int> dp(n+1,-1); 

    return count(n-1,k,height,dp);

}



TABULAR

#include<bits/stdc++.h>
using namespace std;


int minimizeCost(int n, int k, vector<int> &height){
    vector<int> dp(n+1,-1); 

    dp[0]=0;

    
    int ans;

    for(int j=1;j<n;j++)
    {   
        int mini=INT_MAX;
        
      for (int i = 1; i <= k; i++) {
        if (j - i >= 0) {
          ans = dp[j - i] + abs(height[j] - height[j - i]);
          mini = min(mini, ans);
        }
      }

      dp[j]=mini;
    }

    return dp[n-1];
}
