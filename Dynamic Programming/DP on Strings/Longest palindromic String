https://leetcode.com/problems/longest-palindromic-substring/description/


#include<string.h>
class Solution {
public:

    string longestPalindrome(string s) {

        int n=s.size();

        bool dp[n][n];

        int ans[] = {0,0};

        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                dp[i][j]=false;
                
            }
        }  

        for(int i=0;i<n;i++)
        {
            dp[i][i]=true;
            ans[0]=i;
            ans[1]=i;
        }           

        for(int i=0;i<n;i++)
        {
            if(s[i]==s[i+1])
                {
                    dp[i][i+1]=true;
                    ans[0]=i;
                    ans[1]=i+1;

                }
        }

        for(int diff=2;diff<n;diff++)
        {
            for(int i=0;i<n-diff;i++)
            {   
                int j=i+diff;

                if(s[i]==s[j] && dp[i+1][j-1])
                    {
                        ans[0]=i;
                        ans[1]=j;
                        dp[i][j]=true;
                    }
            }


        }

        string temp = s.substr(ans[0],ans[1]-ans[0]+1);

        return temp;      
    }
};
